{"version":3,"sources":["image/iconfinder-mylocation.svg","image/iconfinder-restaurant.svg","image/iconfinder-searchmark.svg","image/iconfinder-star.svg","image/material-search.svg","image/material-restaurant.svg","image/material-filter.svg","image/material-close.svg","image/material-help.svg","image/material-error.svg","image/material-arrowback.svg","components/InfoModal.js","ContextApi/NearSiteContext.js","components/Card.js","components/LocationInfo.js","components/PlaceInfo.js","Search.js","Map.js","App.js","theme/GlobalStyle.js","index.js"],"names":["module","exports","Container","styled","div","props","isHelp","Content","List","ul","CloseBtn","img","Modal","React","memo","setIsHelp","outside","useRef","onClick","e","target","current","console","log","ref","src","CloseIcon","MySite","alt","RestaurantSite","SearchSite","UserContext","createContext","PlaceInfo","Card","data","isInfo","setIsInfo","setSiteInfo","setCardSite","useContext","NearSiteContext","name","rating","vicinity","geometry","location","lat","lng","Star","Error","Information","Panel","LocationInfo","siteInfo","distancePanel","mapRender","Back","setMap","setPanel","CardList","useState","nearSite","undefined","map","elem","idx","key","place_id","Img","Help","Title","h1","Form","form","UserInput","Filter","filterState","searchIcon","url","SearchlocationIcon","scaledSize","window","google","maps","Size","Search","setMySite","setNearSite","userInput","searchLocation","setSearchLocation","searchMark","setSearchMark","setFilterState","useEffect","item","Marker","position","icon","HelpIcon","InfoModal","id","type","required","className","htmlFor","preventDefault","geocoder","address","value","geocode","results","status","setCenter","setZoom","alert","geocodeAddress","Geocoder","SearchIcon","FilterIcon","textContent","sort","a","b","MapContainer","myIcon","restaurantIcon","Map","mapDiv","mySite","myMark","setmyMark","nearMark","setNearMark","cardSite","setMapRender","center","zoom","addListener","getCenter","forEach","myNewMark","request","radius","places","PlacesService","nearbySearch","PlacesServiceStatus","OK","markArray","mark","info","InfoWindow","content","open","setTimeout","close","push","addRestaurantMark","directionsRenderer","DirectionsRenderer","directionsService","DirectionsService","route","origin","destination","travelMode","TravelMode","DRIVING","response","setDirections","calculateDistance","Provider","App","GlobalStyle","createGlobalStyle","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e2b85245.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iconfinder-mylocation.e1800d3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder-restaurant.cf7aa7d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder-searchmark.94b1ead5.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder-star.403fcad3.svg\";","module.exports = __webpack_public_path__ + \"static/media/material-search.92521a12.svg\";","module.exports = __webpack_public_path__ + \"static/media/material-restaurant.f5353376.svg\";","module.exports = __webpack_public_path__ + \"static/media/material-filter.7647e852.svg\";","module.exports = __webpack_public_path__ + \"static/media/material-close.668c22de.svg\";","module.exports = __webpack_public_path__ + \"static/media/material-help.e86221ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/material-error.886f6000.svg\";","module.exports = __webpack_public_path__ + \"static/media/material-arrowback.7e4304aa.svg\";","import React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport MySite from '../image/iconfinder-mylocation.svg';\r\nimport RestaurantSite from '../image/iconfinder-restaurant.svg';\r\nimport SearchSite from '../image/iconfinder-searchmark.svg';\r\nimport CloseIcon from '../image/material-close.svg';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: ${(props) => (props.isHelp ? 1 : 0)};\r\n  visibility: ${(props) => (props.isHelp ? 'visible' : 'hidden')};\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: #00000066;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n  color: #000;\r\n  font-size: 1rem;\r\n  width: 30vw;\r\n  border-radius: 10px;\r\n  padding: 2em;\r\n  line-height: 2;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  margin: 1em 0;\r\n  > li {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    margin-bottom: 1em;\r\n  }\r\n`;\r\n\r\nconst CloseBtn = styled.img`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 3%;\r\n  top: 3%;\r\n  width: 5%;\r\n`;\r\n\r\nconst Modal = React.memo(({ isHelp, setIsHelp }) => {\r\n  const outside = useRef();\r\n  const close = (e) => {\r\n    if (e.target === outside.current) {\r\n      setIsHelp(!isHelp);\r\n    } else {\r\n      console.log('fail');\r\n    }\r\n  };\r\n  return (\r\n    <Container isHelp={isHelp} onClick={close} ref={outside}>\r\n      <Content>\r\n        <CloseBtn src={CloseIcon} onClick={() => setIsHelp(!isHelp)} />\r\n        <h1>[使用說明]</h1>\r\n        <p>可在 [請輸入地址中查詢您的地址] ，移動地圖會即時顯示地圖中之餐廳資訊</p>\r\n        <p>注意：餐廳顯示資訊至多20筆餐廳資訊</p>\r\n        <List>\r\n          <li>\r\n            <img src={MySite} alt=\"error\" />\r\n            <label>當前地圖中心位置</label>\r\n          </li>\r\n          <li>\r\n            <img src={RestaurantSite} alt=\"error\" />\r\n            <label>餐廳位置地點</label>\r\n          </li>\r\n          <li>\r\n            <img src={SearchSite} alt=\"error\" />\r\n            <label>搜尋地點之位置</label>\r\n          </li>\r\n        </List>\r\n      </Content>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default Modal;\r\n","import { createContext } from 'react';\r\nconst UserContext = createContext(null);\r\nexport default UserContext;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Star from '../image/iconfinder-star.svg';\r\nimport Error from '../image/material-error.svg';\r\nimport NearSiteContext from '../ContextApi/NearSiteContext';\r\n\r\n//----------CSS Style----------\r\nconst Container = styled.div`\r\n  cursor: pointer;\r\n  color: #ffffffaa;\r\n  border-radius: 10px;\r\n  padding: 1em;\r\n  margin-bottom: 1.5em;\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  transition: 0.3s;\r\n  > h2 {\r\n    flex: 2;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    color: #ffffffaa;\r\n  }\r\n  > img {\r\n    flex: 1;\r\n    width: 13%;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #ffffff25;\r\n  }\r\n`;\r\n\r\nconst PlaceInfo = styled.div`\r\n  flex: 6;\r\n  margin-right: 1em;\r\n  > h2 {\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    margin-bottom: 0.8em;\r\n    line-height: 1.5;\r\n  }\r\n  > p {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst Card = ({ data, isInfo, setIsInfo, setSiteInfo }) => {\r\n  const { setCardSite } = useContext(NearSiteContext);\r\n  const { name, rating, vicinity } = data;\r\n  const { lat, lng } = data.geometry.location;\r\n  return (\r\n    <Container\r\n      onClick={(e) => {\r\n        setIsInfo(!isInfo);\r\n        setSiteInfo(data);\r\n        setCardSite({ lat: lat(), lng: lng() });\r\n      }}\r\n    >\r\n      {console.log('render Card')}\r\n      <PlaceInfo>\r\n        <h2>{name}</h2>\r\n        <p>{vicinity}</p>\r\n      </PlaceInfo>\r\n      <h2>{rating}</h2>\r\n      <img src={rating !== null ? Star : Error} alt=\"error\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Back from '../image/material-arrowback.svg';\r\nimport Star from '../image/iconfinder-star.svg';\r\nimport NearSiteContext from '../ContextApi/NearSiteContext';\r\n\r\n//----------CSS Style----------\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  transition: 0.5s ease;\r\n  opacity: ${(props) => (props.isInfo ? 1 : 0)};\r\n  visibility: ${(props) => (props.isInfo ? 'visible' : 'hidden')};\r\n  overflow-y: ${(props) => (props.isInfo ? 'scroll' : 'hidden')};\r\n  scrollbar-color: #ffffff66 transparent;\r\n  &::-webkit-scrollbar {\r\n    background-color: transparent;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #ffffff66;\r\n  }\r\n\r\n  > img {\r\n    cursor: pointer;\r\n    width: 5%;\r\n    border-radius: 50%;\r\n    &:hover {\r\n      background-color: #ffffff66;\r\n    }\r\n  }\r\n`;\r\nconst Information = styled.div`\r\n  color: #ffffffaa;\r\n  font-size: 1rem;\r\n  line-height: 3;\r\n  padding: 1em;\r\n  > h1 {\r\n    font-size: 1.1rem;\r\n    font-weight: 700;\r\n  }\r\n  > h2 {\r\n    display: flex;\r\n    align-items: center;\r\n    > img {\r\n      width: 5%;\r\n      margin-left: 1em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Panel = styled.div`\r\n  .adp table {\r\n    font-size: 1rem !important;\r\n    font-weight: 700;\r\n    color: #ffffffaa !important;\r\n    line-height: 3;\r\n  }\r\n  .adp-placemark {\r\n    font-weight: 700;\r\n    background-color: transparent !important;\r\n    border: none;\r\n  }\r\n  .adp-substep {\r\n    vertical-align: initial;\r\n    border: none;\r\n  }\r\n  .adp-summary {\r\n    color: #ffffffaa;\r\n    font-weight: 700;\r\n    margin-bottom: 1em;\r\n  }\r\n  .adp-legal {\r\n    margin-right: 1em;\r\n    text-align: right;\r\n    font-size: 0.8rem;\r\n    color: #ffffffaa;\r\n  }\r\n  .adp-marker2 {\r\n    margin-right: 1em;\r\n  }\r\n  .adp-directions {\r\n    width: 90%;\r\n  }\r\n  .adp-maneuver {\r\n    background-color: #ffffffaa;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst LocationInfo = ({ isInfo, setIsInfo, siteInfo }) => {\r\n  const { distancePanel, mapRender } = useContext(NearSiteContext);\r\n  const pageBack = () => {\r\n    setIsInfo(!isInfo);\r\n    mapRender.setMap(null);\r\n    mapRender.setPanel(null);\r\n  };\r\n  return (\r\n    <Container isInfo={isInfo}>\r\n      {console.log('render lcoation info')}\r\n      <img src={Back} alt=\"error\" onClick={pageBack} />\r\n      <Information>\r\n        <h1>{siteInfo.name}</h1>\r\n        <p>{siteInfo.vicinity}</p>\r\n        <h2>\r\n          {siteInfo.rating}\r\n          <img src={Star} alt=\"error\" />\r\n        </h2>\r\n      </Information>\r\n      <Panel ref={distancePanel}></Panel>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LocationInfo;\r\n","import React, { useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from './Card';\r\nimport LocationInfo from './LocationInfo';\r\nimport NearSiteContext from '../ContextApi/NearSiteContext';\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 80%;\r\n  position: relative;\r\n`;\r\nconst Slide = styled.div`\r\n  width: 100%;\r\n  height: 80%;\r\n`;\r\n\r\nconst CardList = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: 0.5s ease;\r\n  opacity: ${(props) => (props.isInfo ? 0 : 1)};\r\n  visibility: ${(props) => (props.isInfo ? 'hidden' : 'visible')};\r\n  overflow-y: ${(props) => (props.isInfo ? 'hidden' : 'scroll')};\r\n  scrollbar-color: #ffffff66 transparent;\r\n  &::-webkit-scrollbar {\r\n    background-color: transparent;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #ffffff66;\r\n  }\r\n`;\r\n\r\nconst PlaceInfo = () => {\r\n  const [isInfo, setIsInfo] = useState(false);\r\n  const [siteInfo, setSiteInfo] = useState();\r\n  const { nearSite } = useContext(NearSiteContext);\r\n  return (\r\n    <Container>\r\n      {console.log('render placeinfo')}\r\n      <CardList isInfo={isInfo}>\r\n        {nearSite !== undefined && nearSite.map((elem, idx) => <Card key={elem.place_id} isInfo={isInfo} setIsInfo={setIsInfo} data={elem} setSiteInfo={setSiteInfo} />)}\r\n      </CardList>\r\n      {siteInfo !== undefined && <LocationInfo isInfo={isInfo} setIsInfo={setIsInfo} siteInfo={siteInfo} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlaceInfo;\r\n","import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchIcon from './image/material-search.svg';\r\nimport Img from './image/material-restaurant.svg';\r\nimport SearchlocationIcon from './image/iconfinder-searchmark.svg';\r\nimport FilterIcon from './image/material-filter.svg';\r\nimport InfoModal from './components/InfoModal';\r\nimport HelpIcon from './image/material-help.svg';\r\nimport PlaceInfo from './components/PlaceInfo';\r\nimport NearSiteContext from './ContextApi/NearSiteContext';\r\n\r\n//----------CSS Style----------\r\nconst Container = styled.div`\r\n  flex: 0 1 50%;\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n  background: linear-gradient(330deg, #320d8c, #230669);\r\n  color: #fff;\r\n  padding: 3em;\r\n  position: relative;\r\n  overflow-y: hidden;\r\n  z-index: 1;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    background-image: url(${Img});\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    top: 0;\r\n    right: 0;\r\n    width: 50%;\r\n    height: 50%;\r\n    filter: opacity(0.1);\r\n    z-index: -1;\r\n  }\r\n`;\r\nconst Help = styled.img`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 2%;\r\n  right: 3%;\r\n  width: 5%;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  margin-bottom: 1.5em;\r\n  letter-spacing: 0.5em;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst UserInput = styled.div`\r\n  position: relative;\r\n  border-bottom: 3px solid #ffffff66;\r\n  > input {\r\n    width: 90%;\r\n    font-size: 1.3rem;\r\n    color: #eb663e;\r\n    background-color: transparent;\r\n    border: none;\r\n    &:focus {\r\n      outline: none;\r\n      & + .place-label {\r\n        color: #eb663e;\r\n      }\r\n    }\r\n    &:focus,\r\n    &:valid {\r\n      & + .place-label {\r\n        top: -100%;\r\n        left: 0;\r\n      }\r\n    }\r\n  }\r\n  > label {\r\n    cursor: text;\r\n    color: #ffffff66;\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    position: absolute;\r\n    top: 20%;\r\n    left: 1%;\r\n    transition: 0.5s;\r\n  }\r\n  > button {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    background-color: transparent;\r\n    border: none;\r\n    width: 10%;\r\n    height: 100%;\r\n    &:active {\r\n      outline: none;\r\n    }\r\n    > img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n  &:focus-within {\r\n    border-bottom: 3px solid #eb663e;\r\n  }\r\n`;\r\n\r\nconst Filter = styled.div`\r\n  margin-bottom: 0.5em;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n\r\n  > button {\r\n    cursor: pointer;\r\n    color: #ffffff66;\r\n    background-color: transparent;\r\n    border: 3px solid #ffffff66;\r\n    border-radius: 10px;\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    padding: 0.3em 1em;\r\n    position: relative;\r\n\r\n    > img {\r\n      margin-left: 0.5em;\r\n    }\r\n    > ul {\r\n      position: absolute;\r\n      width: 100%;\r\n      opacity: ${(props) => (props.filterState ? 1 : 0)};\r\n      visibility: ${(props) => (props.filterState ? 'visible' : 'hidden')};\r\n      top: 110%;\r\n      right: 0;\r\n      background-color: #2abf70;\r\n      border-radius: 10px;\r\n      color: #fff;\r\n      z-index: 1;\r\n      font-weight: 700;\r\n      font-size: 1rem;\r\n      transition: 0.5s;\r\n      > li {\r\n        border-radius: 10px;\r\n        padding: 0.5em 0;\r\n\r\n        &:hover {\r\n          background-color: #ffffff66;\r\n        }\r\n      }\r\n    }\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\n//----------Change Default Icon----------\r\n// My Location Icon\r\nconst searchIcon = {\r\n  url: SearchlocationIcon,\r\n  scaledSize: new window.google.maps.Size(70, 70),\r\n};\r\n\r\nconst Search = React.memo((props) => {\r\n  //----------Destructuring Assignment----------\r\n  const { map, nearSite, setMySite, setNearSite } = props.props;\r\n  //----------Ref----------\r\n  const userInput = useRef();\r\n\r\n  //----------State----------\r\n  const [searchLocation, setSearchLocation] = useState();\r\n  const [searchMark, setSearchMark] = useState();\r\n  const [filterState, setFilterState] = useState(false);\r\n  const [isHelp, setIsHelp] = useState(false);\r\n\r\n  // add search place mark\r\n  useEffect(() => {\r\n    if (searchLocation === undefined) return;\r\n    if (searchMark !== undefined) {\r\n      setSearchMark((item) => item.setMap(null));\r\n    }\r\n    setSearchMark(\r\n      new window.google.maps.Marker({\r\n        position: searchLocation,\r\n        map: map,\r\n        icon: searchIcon,\r\n      })\r\n    );\r\n    setMySite(searchLocation);\r\n  }, [searchLocation]);\r\n\r\n  // Submit Event\r\n  const SearchPlace = (e) => {\r\n    e.preventDefault();\r\n    // set google map geocoder\r\n    const geocoder = new window.google.maps.Geocoder();\r\n    // get user input address location\r\n    const geocodeAddress = (geocoder, map) => {\r\n      const address = userInput.current.value;\r\n      geocoder.geocode({ address: address }, (results, status) => {\r\n        if (status === 'OK') {\r\n          const { lat, lng } = results[0].geometry.location;\r\n          setSearchLocation({ lat: lat(), lng: lng() });\r\n          map.setCenter(results[0].geometry.location);\r\n          map.setZoom(16);\r\n        } else {\r\n          alert(`載入失敗，原因為${status}`);\r\n        }\r\n      });\r\n    };\r\n    geocodeAddress(geocoder, map);\r\n  };\r\n\r\n  // Filter List Method\r\n  const showList = () => {\r\n    setFilterState(!filterState);\r\n  };\r\n  const filterName = (e) => {\r\n    if (e.target.textContent === '評價最高') {\r\n      nearSite.sort((a, b) => (a.rating > b.rating ? -1 : b.rating > a.rating ? 1 : 0));\r\n      setNearSite(nearSite);\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      {console.log('search render')}\r\n      <Help src={HelpIcon} onClick={() => setIsHelp(!isHelp)} />\r\n      <InfoModal isHelp={isHelp} setIsHelp={setIsHelp} />\r\n      <Title>餐廳搜尋</Title>\r\n      <Form>\r\n        <UserInput>\r\n          <input ref={userInput} id=\"place\" type=\"text\" required />\r\n          <label className=\"place-label\" htmlFor=\"place\">\r\n            請輸入地址\r\n          </label>\r\n          <button onClick={SearchPlace} type=\"submit\">\r\n            <img src={SearchIcon} alt=\"error\" />\r\n          </button>\r\n        </UserInput>\r\n      </Form>\r\n      <Filter filterState={filterState}>\r\n        <button onClick={showList}>\r\n          條件篩選\r\n          <img src={FilterIcon} alt=\"error\" />\r\n          <ul onClick={filterName}>\r\n            <li>評價最高</li>\r\n          </ul>\r\n        </button>\r\n      </Filter>\r\n      {nearSite !== undefined && <PlaceInfo />}\r\n      <InfoModal />\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default Search;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport MySite from './image/iconfinder-mylocation.svg';\r\nimport RestaurantSite from './image/iconfinder-restaurant.svg';\r\nimport Search from './Search';\r\nimport styled from 'styled-components';\r\nimport NearSiteContext from './ContextApi/NearSiteContext';\r\n\r\n//----------CSS Style----------\r\nconst Container = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst MapContainer = styled.div`\r\n  flex: 0 1 50%;\r\n  overflow-y: hidden;\r\n`;\r\n\r\n//----------Change Default Icon----------\r\n// My Location Icon\r\nconst myIcon = {\r\n  url: MySite,\r\n  scaledSize: new window.google.maps.Size(70, 70),\r\n};\r\n// Restaurant Icon\r\nconst restaurantIcon = {\r\n  url: RestaurantSite,\r\n  scaledSize: new window.google.maps.Size(50, 50),\r\n};\r\n\r\nconst Map = () => {\r\n  //----------Ref----------\r\n  const mapDiv = useRef();\r\n  const distancePanel = useRef();\r\n  //----------State----------\r\n  const [map, setMap] = useState();\r\n  const [mySite, setMySite] = useState({ lat: 25.033951, lng: 121.564655 });\r\n  const [nearSite, setNearSite] = useState();\r\n  const [myMark, setmyMark] = useState();\r\n  const [nearMark, setNearMark] = useState();\r\n  const [cardSite, setCardSite] = useState();\r\n  const [mapRender, setMapRender] = useState();\r\n\r\n  // Initial Map\r\n  useEffect(() => {\r\n    const options = {\r\n      center: { lat: 25.033951, lng: 121.564655 },\r\n      zoom: 16,\r\n    };\r\n    // Create Google Map\r\n    const map = new window.google.maps.Map(mapDiv.current, options);\r\n    map.addListener('dragend', () => {\r\n      setMySite({ lat: map.getCenter().lat(), lng: map.getCenter().lng() });\r\n    });\r\n    // Set Map & My Site\r\n    setMap(map);\r\n  }, []);\r\n\r\n  // Update Mark & Update Restaurant\r\n  useEffect(() => {\r\n    if (map === undefined) return;\r\n    // Clearn Origin Mark\r\n    if (myMark !== undefined) myMark.setMap(null);\r\n    if (nearMark !== undefined) nearMark.forEach((item) => item.setMap(null));\r\n    // Add My Mark\r\n    const myNewMark = new window.google.maps.Marker({\r\n      position: mySite,\r\n      map: map,\r\n      icon: myIcon,\r\n    });\r\n    setmyMark(myNewMark);\r\n    // Get Restaurant & Add Restaurant Mark\r\n    const addRestaurantMark = (results) => {\r\n      // Set Restaurant Mark\r\n      let markArray = [];\r\n      results.forEach(({ geometry, name }) => {\r\n        // Create Mark\r\n        const mark = new window.google.maps.Marker({\r\n          position: geometry.location,\r\n          map: map,\r\n          icon: restaurantIcon,\r\n        });\r\n        // Create Info Window\r\n        const info = new window.google.maps.InfoWindow({\r\n          content: `<h3>${name}</h3>`,\r\n        });\r\n        // Add Info Click Event\r\n        mark.addListener('click', () => {\r\n          info.open(map, mark);\r\n          window.setTimeout(() => {\r\n            info.close();\r\n          }, 3000);\r\n        });\r\n        // Push Mark In Temp Array\r\n        markArray.push(mark);\r\n      });\r\n      // Update Restaurant Mark\r\n      setNearSite(results);\r\n      setNearMark(markArray);\r\n    };\r\n    // Get Restaurant Data\r\n    const getRestaurantData = (results, status) => {\r\n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\r\n        addRestaurantMark(results);\r\n      }\r\n    };\r\n    // Set Request\r\n    const request = {\r\n      location: mySite,\r\n      radius: '1000',\r\n      type: ['restaurant'],\r\n    };\r\n    // Set Map Place Service\r\n    let service = new window.google.maps.places.PlacesService(map);\r\n    service.nearbySearch(request, getRestaurantData);\r\n  }, [map, mySite]);\r\n\r\n  // Show Distance\r\n  useEffect(() => {\r\n    const directionsRenderer = new window.google.maps.DirectionsRenderer();\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n    if (map === undefined) return;\r\n    directionsRenderer.setMap(map);\r\n    directionsRenderer.setPanel(distancePanel.current);\r\n    setMapRender(directionsRenderer);\r\n    const calculateDistance = (directionsService, directionsRenderer) => {\r\n      directionsService.route(\r\n        {\r\n          origin: mySite,\r\n          destination: cardSite,\r\n          travelMode: window.google.maps.TravelMode.DRIVING,\r\n        },\r\n        (response, status) => {\r\n          if (status === 'OK') {\r\n            directionsRenderer.setDirections(response);\r\n          } else {\r\n            window.alert(`發生錯誤，原因為${status}`);\r\n          }\r\n        }\r\n      );\r\n    };\r\n    calculateDistance(directionsService, directionsRenderer);\r\n  }, [cardSite]);\r\n  return (\r\n    <Container>\r\n      {console.log('render map')}\r\n      <MapContainer ref={mapDiv} />\r\n      {map !== undefined && (\r\n        <NearSiteContext.Provider value={{ nearSite, setCardSite, distancePanel, mapRender }}>\r\n          <Search props={{ map, nearSite, setMySite, setNearSite }} />\r\n        </NearSiteContext.Provider>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { Fragment } from 'react';\r\nimport Map from './Map';\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Map />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\n\r\nbody {\r\n\tline-height: 1;\r\n}\r\n\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\n\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\n\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\n\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n/* ============================================== */\r\n\r\nbody,html{\r\n  height:100%;\r\n  font-size: calc(0.75rem + 1vmin);\r\n  font-family: 'Noto Sans TC', sans-serif;\r\n}\r\n\r\n*,*::before,*::after{\r\n  box-sizing:border-box;\r\n}\r\n\r\n#root{\r\n  width:100%;\r\n  height:100%;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport GlobalStyle from './theme/GlobalStyle';\r\n\r\nReactDOM.render(\r\n  <Fragment>\r\n    <GlobalStyle />\r\n    <App />\r\n  </Fragment>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}